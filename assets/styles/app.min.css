/*
Stylus variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon_home_width;
}

The large array-like variables contain all information about a single icon
$icon_home = x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet = width height image $spritesheet_sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  spriteWidth($icon_home)
}

.icon-email {
  sprite($icon_email)
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of Stylus

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

sprites($spritesheet_sprites);
*/
/*
Stylus variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon_home_width;
}

The large array-like variables contain all information about a single icon
$icon_home = x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet = width height image $spritesheet_sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  spriteWidth($icon_home)
}

.icon-email {
  sprite($icon_email)
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of Stylus

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

sprites($spritesheet_sprites);
*/
@font-face {
  font-family: 'PT Sans';
  src: url("../fonts/pt-sans_regular.eot");
  src: local('☺'), url("../fonts/pt-sans_regular.woff") format('woff'), url("../fonts/pt-sans_regular.svg") format('svg');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'PT Sans';
  src: url("../fonts/pt-sans_bold.eot");
  src: local('☺'), url("../fonts/pt-sans_bold.woff") format('woff'), url("../fonts/pt-sans_bold.svg") format('svg');
  font-weight: bold;
  font-style: normal;
}
@font-face {
  font-family: 'Courier New';
  src: url("../fonts/courier-new.eot");
  src: local('☺'), url("../fonts/courier-new.woff") format('woff'), url("../fonts/courier-new.svg") format('svg');
  font-weight: normal;
  font-style: normal;
}
* {
  margin: 0;
  padding: 0;
  font: inherit;
  box-sizing: border-box;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}
audio:not([controls]) {
  display: none;
  height: 0;
}
[hidden],
template {
  display: none;
}
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  -webkit-focus-ring-color: rgba(255,255,255,0);
  cursor: default;
}
body {
  font-size: 100%;
  line-height: 1;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}
a {
  background: transparent;
}
*:focus,
*:active,
*:hover {
  outline: none;
}
hr {
  box-sizing: content-box;
  height: 0;
}
ol,
ul {
  list-style: none;
}
pre {
  -moz-tab-size: 4;
       tab-size: 4;
  white-space: pre-wrap;
}
q {
  quotes: '\201C' '\201D' '\2018' '\2019';
}
img {
  border: none;
}
svg:not(:root) {
  overflow: hidden;
}
button,
input {
  line-height: normal;
}
button,
select {
  text-transform: none;
}
button {
  overflow: visible;
}
button,
html input[type='button'],
input[type='reset'],
input[type='submit'] {
  -webkit-appearance: button;
  cursor: pointer;
}
button[disabled],
html input[disabled] {
  cursor: default;
}
input[type='checkbox'],
input[type='radio'] {
  box-sizing: border-box;
}
input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button {
  height: auto;
}
input[type='search'] {
  -webkit-appearance: textfield;
  box-sizing: content-box;
}
input[type='search']::-webkit-search-cancel-button,
input[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: none;
  padding: 0;
}
textarea {
  overflow: auto;
  vertical-align: top;
}
button,
input,
select[multiple],
textarea {
  background-image: none;
}
input,
select,
textarea {
  border-radius: 0;
  box-shadow: none;
}
input,
textarea {
  resize: none;
  -webkit-user-select: text;
     -moz-user-select: text;
      -ms-user-select: text;
          user-select: text;
}
[placeholder]:focus::-webkit-input-placeholder {
  color: transparent;
}
[placeholder]:focus:-ms-input-placeholder {
  color: transparent;
}
[placeholder]:focus::placeholder {
  color: transparent;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
.body {
  display: block;
}
.body_gray-bg {
  background-color: #797979;
}
.checkbox-group {
  position: relative;
  display: block;
  cursor: pointer;
}
.checkbox-group__input {
  position: absolute;
  left: -99999px;
}
.checkbox-group__label {
  position: relative;
  padding-left: 30px;
  display: block;
  line-height: 1.25;
  font-family: 'PT Sans', sans-serif;
  font-size: 21px;
  font-weight: 700;
  color: #000;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}
.checkbox-group__label::before {
  background-image: url("../images/sprites/checkbox.png");
  background-position: -29px 0px;
  width: 19px;
  height: 18px;
  content: '';
  position: absolute;
  top: 4px;
  left: 4px;
}
.checkbox-group__label::after {
  background-image: url("../images/sprites/checkbox.png");
  background-position: 0px 0px;
  width: 21px;
  height: 27px;
  content: '';
  position: absolute;
  top: -6px;
  left: 7px;
  opacity: 0;
  transition: all ease 0.3s;
  transform: scale(1.5);
}
.checkbox-group__input:checked + .checkbox-group__label::after {
  opacity: 1;
  transform: scale(1);
}
.header {
  display: block;
  position: relative;
}
.title {
  text-align: center;
  padding-top: 25px;
  padding-bottom: 25px;
}
.stamp {
  position: absolute;
  top: -15px;
  right: -55px;
}
@media (max-device-width: 768px) {
  .logo {
    width: 100px;
  }
  .logo img {
    width: 100%;
  }
  .stamp {
    top: 0;
    right: 0;
    width: 100px;
  }
  .stamp img {
    width: 100%;
  }
  .title img {
    width: 100px;
  }
}
.input-group {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: end;
      align-items: flex-end;
  margin-bottom: 5px;
}
.input-group__label {
  display: block;
  text-align: left;
  white-space: nowrap;
  font-family: 'PT Sans', sans-serif;
  font-size: 22px;
  font-weight: 700;
  color: #2e1a15;
  margin-right: 15px;
  padding-bottom: 4px;
}
.input-group__input {
  display: inline-block;
  text-align: left;
  background-color: transparent;
  background-image: url("../images/line.png");
  background-repeat: no-repeat;
  background-position: 0 26px;
  background-size: cover;
  border: none;
  outline: none;
  font-family: 'Courier New', serif;
  font-size: 30px;
  font-weight: 400;
  color: #231f20;
  padding: 15px 15px 8px;
  width: 100%;
  line-height: 1.2;
}
.input-group_short > .input-group__input {
  width: 210px;
}
@media (max-device-width: 768px) {
  .input-group {
    display: block;
  }
  .input-group__label {
    margin-right: 0;
    padding-bottom: 0;
  }
  .input-group__input {
    display: block;
    width: 100%;
    background-position: 0 15px;
    font-size: 18px;
    padding-left: 0;
    padding-right: 0;
  }
  .input-group_short > .input-group__input {
    width: 120px;
  }
}
.js-level {
  display: block;
}
.js-level__js-slider {
  position: relative;
  margin-top: 40px;
  padding-bottom: 100px;
  display: block;
  height: 5px;
  background-image: url("../images/line.png");
  background-repeat: no-repeat;
  background-position-y: -27px;
  background-size: 100%;
}
.js-level__js-slider .noUi-marker {
  position: absolute;
  top: 1px;
  width: 3px;
  height: 26px;
  background-image: url("../images/common-pip.png");
  background-repeat: no-repeat;
  background-position: -8px 0;
}
.js-level__js-slider .noUi-marker.firstPipNode {
  background-image: url("../images/first-pip.png");
  background-position: -1px 0;
}
.js-level__js-slider .noUi-marker.lastPipNode {
  background-image: url("../images/last-pip.png");
  background-position: -8px 0;
  transform: translateX(-2px);
}
.js-level__js-slider .noUi-value {
  position: absolute;
  margin-top: 30px;
  max-width: 200px;
  font-family: 'PT Sans', sans-serif;
  font-size: 13px;
  font-weight: 700;
  line-height: 1.5;
  color: #2e1a15;
}
.js-level__js-slider .noUi-value:last-child {
  transform: translateX(-100%);
  white-space: nowrap;
}
.js-level__js-slider .noUi-origin {
  position: absolute;
  top: -20px;
  transform: translateX(-50%);
}
.js-level__js-slider .noUi-handle {
  position: relative;
  background-image: url("../images/triangle.png");
  background-repeat: no-repeat;
  width: 18px;
  height: 16px;
}
@media (max-device-width: 768px) {
  .js-level {
    margin-bottom: 40px;
    padding-left: 15px;
  }
  .js-level__js-slider {
    margin-top: 15px;
    padding-left: 15px;
    padding-bottom: 0;
    height: 200px;
    background-image: url("../images/line-vertical.png");
    background-position-x: -12px;
    background-position-y: 0;
    background-size: 10%;
  }
  .js-level__js-slider .noUi-marker {
    left: 1px;
    width: 26px;
    height: 3px;
    background-image: url("../images/common-pip-mobile.png");
    background-position: 0 -8px;
  }
  .js-level__js-slider .noUi-marker.firstPipNode {
    background-image: url("../images/first-pip-mobile.png");
  }
  .js-level__js-slider .noUi-marker.lastPipNode {
    background-image: url("../images/last-pip-mobile.png");
    background-position: 0 -12px;
  }
  .js-level__js-slider .noUi-value {
    left: 40px;
    margin-top: 0;
    max-width: auto;
    transform: translateY(-50%);
  }
  .js-level__js-slider .noUi-value:last-child {
    transform: translateY(-50%);
  }
  .js-level__js-slider .noUi-origin {
    position: absolute;
    left: -15px;
    transform: translateY(-50%);
  }
  .js-level__js-slider .noUi-handle {
    transform: rotate(-90deg);
  }
}
.main {
  display: block;
}
.main__section_personal-data,
.main__section_about,
.main__section_plans {
  margin-bottom: 60px;
}
.main__section_skills {
  margin-bottom: 60px;
}
.main__section_skills:after {
  display: table;
  clear: both;
  content: '';
}
.main__content {
  display: block;
}
.main__content_skills {
  margin-top: 25px;
}
.main__title {
  margin-bottom: 10px;
  display: block;
  line-height: 1.5;
  font-family: 'PT Sans', sans-serif;
  font-size: 24px;
  font-weight: 700;
  color: #2e1a15;
}
.main__description {
  display: block;
  line-height: 1.5;
  font-family: 'PT Sans', sans-serif;
  font-size: 15px;
  font-weight: 400;
  color: #3d3d3d;
}
@media (max-device-width: 768px) {
  .main__section_personal-data,
  .main__section_about,
  .main__section_skills,
  .main__section_plans {
    margin-bottom: 30px;
  }
}
.page {
  margin: 0 auto;
  padding: 50px 110px;
  width: 1000px;
  background-image: url("../images/paper.jpg");
}
@media (max-device-width: 768px) {
  .page {
    padding: 20px;
    width: 100%;
  }
}
.plan {
  margin-top: 20px;
  display: block;
}
.plan__item {
  margin-right: 10px;
  display: inline-block;
}
@media (max-device-width: 768px) {
  .plan {
    margin-top: 10px;
  }
  .plan__item {
    margin-top: 10px;
    margin-right: 0;
  }
}
.radio-group {
  position: relative;
  display: block;
  cursor: pointer;
}
.radio-group__input {
  position: absolute;
  left: -99999px;
}
.radio-group__label {
  position: relative;
  padding-left: 40px;
  display: block;
  line-height: 1.25;
  font-family: 'PT Sans', sans-serif;
  font-size: 21px;
  font-weight: 700;
  color: #000;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}
.radio-group__label::before {
  background-image: url("../images/sprites/radio.png");
  background-position: 0px 0px;
  width: 41px;
  height: 45px;
  content: '';
  position: absolute;
  top: -8px;
  left: 0;
}
.radio-group__label::after {
  background-image: url("../images/sprites/radio.png");
  background-position: -49px 0px;
  width: 23px;
  height: 27px;
  content: '';
  position: absolute;
  top: 5px;
  left: 9px;
  opacity: 0;
  transition: all ease 0.3s;
  transform: scale(1.5);
}
.radio-group__input:checked + .radio-group__label::after {
  opacity: 1;
  transform: scale(1);
}
.skills {
  display: block;
  float: left;
  width: 33%;
}
.skills__skill {
  margin-bottom: 10px;
  display: block;
}
@media (max-device-width: 768px) {
  .skills {
    float: none;
    width: 100%;
  }
}
.text-area {
  display: block;
  width: 100%;
  min-height: 180px;
  font-family: 'Courier New', serif;
  font-size: 30px;
  font-weight: 100;
  line-height: 2;
  resize: none;
  background-color: transparent;
  background-image: url("../images/line.png");
  background-position: 0 20px;
  border: none;
}
.js-text-area_top-30 {
  margin-top: 10px;
}
@media (max-device-width: 768px) {
  .text-area {
    font-size: 18px;
    background-image: url("../images/line-mobile.png");
    background-position: 0 15px;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNwcml0ZXMvY2hlY2tib3guc3R5bCIsInNwcml0ZXMvcmFkaW8uc3R5bCIsImhlbHBlcnMvZm9udHMuc3R5bCIsImhlbHBlcnMvb3B0aW1pemUuc3R5bCIsIi4uL2Jsb2Nrcy9ib2R5L2JvZHkuc3R5bCIsIi4uL2Jsb2Nrcy9jaGVja2JveC1ncm91cC9jaGVja2JveC1ncm91cC5zdHlsIiwiLi4vYmxvY2tzL2hlYWRlci9oZWFkZXIuc3R5bCIsImhlbHBlcnMvbWl4aW5zLnN0eWwiLCIuLi9ibG9ja3MvaW5wdXQtZ3JvdXAvaW5wdXQtZ3JvdXAuc3R5bCIsIi4uL2Jsb2Nrcy9qcy1sZXZlbC9qcy1sZXZlbC5zdHlsIiwiLi4vYmxvY2tzL21haW4vbWFpbi5zdHlsIiwiLi4vYmxvY2tzL3BhZ2UvcGFnZS5zdHlsIiwiLi4vYmxvY2tzL3BsYW4vcGxhbi5zdHlsIiwiLi4vYmxvY2tzL3JhZGlvLWdyb3VwL3JhZGlvLWdyb3VwLnN0eWwiLCIuLi9ibG9ja3Mvc2tpbGxzL3NraWxscy5zdHlsIiwiLi4vYmxvY2tzL3RleHQtYXJlYS90ZXh0LWFyZWEuc3R5bCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7OztBQThDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE4RUE7Ozs7Ozs7OztBQzVIQTs7Ozs7Ozs7Ozs7OztBQThDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE4RUE7Ozs7Ozs7OztBQzVIQTtFQUNDLHVCQUFBO0VBQ0EseUNBQUE7RUFDQSx3SEFBQTtFQUdBLG9CQUFBO0VBQ0EsbUJBQUE7O0FBR0Q7RUFDQyx1QkFBQTtFQUNBLHNDQUFBO0VBQ0Esa0hBQUE7RUFHQSxrQkFBQTtFQUNBLG1CQUFBOztBQUdEO0VBQ0MsMkJBQUE7RUFDQSxxQ0FBQTtFQUNBLGdIQUFBO0VBR0Esb0JBQUE7RUFDQSxtQkFBQTs7QUN0QkQ7RUFDQyxVQUFBO0VBQ0EsV0FBQTtFQUNBLGNBQUE7RUFDQSx1QkFBQTs7QUFNRDs7Ozs7Ozs7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VUFBQTtFQUNBLFFBQUE7O0FBRUQ7RVp1REEscURBQUE7RUFKQSwrQkFBQTtFQVJBLFlBQUE7RUFJQSxhQUFBO0VZN0NDLFlBQUE7RUFFQSxtQkFBQTtFQUNBLFNBQUE7RUFDQSxVQUFBO0VBRUEsV0FBQTtFQUNBLDBCQUFBO0VBQ0Esc0JBQUE7O0FBRUY7RUFDQyxXQUFBO0VBQ0Esb0JBQUE7O0FDNUNGO0VBQ0MsZUFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBOztBQUVBO0VBQ0Msb0JBQUE7RUFDQSxlQUFBOztBQUU2QjtFQUM5QjtJQUNDLFlBQUE7SUFDQSxZQUFBOzs7QUNaRjtFQUNDLGVBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQ0FBQTtFQUNBLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxlQUFBO0VBQ0EsYUFBQTtFQUNBLDhCQUFBO0VBQ0EsNENBQUE7RUFDQSw0QkFBQTtFQUNBLGFBQUE7O0FBSUE7RUFDQyxpQkFBQTs7QUFFNkI7RUFDOUI7SUFDQyxnQkFBQTtJQUVBLG1EQUFBO0lBQ0EsNEJBQUEiLCJmaWxlIjoiYXBwLm1pbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuU3R5bHVzIHZhcmlhYmxlcyBhcmUgaW5mb3JtYXRpb24gYWJvdXQgaWNvbidzIGNvbXBpbGVkIHN0YXRlLCBzdG9yZWQgdW5kZXIgaXRzIG9yaWdpbmFsIGZpbGUgbmFtZVxuXG4uaWNvbi1ob21lIHtcbiAgd2lkdGg6ICRpY29uX2hvbWVfd2lkdGg7XG59XG5cblRoZSBsYXJnZSBhcnJheS1saWtlIHZhcmlhYmxlcyBjb250YWluIGFsbCBpbmZvcm1hdGlvbiBhYm91dCBhIHNpbmdsZSBpY29uXG4kaWNvbl9ob21lID0geCB5IG9mZnNldF94IG9mZnNldF95IHdpZHRoIGhlaWdodCB0b3RhbF93aWR0aCB0b3RhbF9oZWlnaHQgaW1hZ2VfcGF0aDtcblxuQXQgdGhlIGJvdHRvbSBvZiB0aGlzIHNlY3Rpb24sIHdlIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHNwcml0ZXNoZWV0IGl0c2VsZlxuJHNwcml0ZXNoZWV0ID0gd2lkdGggaGVpZ2h0IGltYWdlICRzcHJpdGVzaGVldF9zcHJpdGVzO1xuKi9cbiRjaGVja2JveF9jaGVja2VkX25hbWUgPSAnY2hlY2tib3hfY2hlY2tlZCc7XG4kY2hlY2tib3hfY2hlY2tlZF94ID0gMHB4O1xuJGNoZWNrYm94X2NoZWNrZWRfeSA9IDBweDtcbiRjaGVja2JveF9jaGVja2VkX29mZnNldF94ID0gMHB4O1xuJGNoZWNrYm94X2NoZWNrZWRfb2Zmc2V0X3kgPSAwcHg7XG4kY2hlY2tib3hfY2hlY2tlZF93aWR0aCA9IDIxcHg7XG4kY2hlY2tib3hfY2hlY2tlZF9oZWlnaHQgPSAyN3B4O1xuJGNoZWNrYm94X2NoZWNrZWRfdG90YWxfd2lkdGggPSA0OHB4O1xuJGNoZWNrYm94X2NoZWNrZWRfdG90YWxfaGVpZ2h0ID0gMjdweDtcbiRjaGVja2JveF9jaGVja2VkX2ltYWdlID0gJy4uL2ltYWdlcy9zcHJpdGVzL2NoZWNrYm94LnBuZyc7XG4kY2hlY2tib3hfY2hlY2tlZCA9IDBweCAwcHggMHB4IDBweCAyMXB4IDI3cHggNDhweCAyN3B4ICcuLi9pbWFnZXMvc3ByaXRlcy9jaGVja2JveC5wbmcnICdjaGVja2JveF9jaGVja2VkJztcbiRjaGVja2JveF9lbXB0eV9uYW1lID0gJ2NoZWNrYm94X2VtcHR5JztcbiRjaGVja2JveF9lbXB0eV94ID0gMjlweDtcbiRjaGVja2JveF9lbXB0eV95ID0gMHB4O1xuJGNoZWNrYm94X2VtcHR5X29mZnNldF94ID0gLTI5cHg7XG4kY2hlY2tib3hfZW1wdHlfb2Zmc2V0X3kgPSAwcHg7XG4kY2hlY2tib3hfZW1wdHlfd2lkdGggPSAxOXB4O1xuJGNoZWNrYm94X2VtcHR5X2hlaWdodCA9IDE4cHg7XG4kY2hlY2tib3hfZW1wdHlfdG90YWxfd2lkdGggPSA0OHB4O1xuJGNoZWNrYm94X2VtcHR5X3RvdGFsX2hlaWdodCA9IDI3cHg7XG4kY2hlY2tib3hfZW1wdHlfaW1hZ2UgPSAnLi4vaW1hZ2VzL3Nwcml0ZXMvY2hlY2tib3gucG5nJztcbiRjaGVja2JveF9lbXB0eSA9IDI5cHggMHB4IC0yOXB4IDBweCAxOXB4IDE4cHggNDhweCAyN3B4ICcuLi9pbWFnZXMvc3ByaXRlcy9jaGVja2JveC5wbmcnICdjaGVja2JveF9lbXB0eSc7XG4kc3BfY2hlY2tib3hfd2lkdGggPSA0OHB4O1xuJHNwX2NoZWNrYm94X2hlaWdodCA9IDI3cHg7XG4kc3BfY2hlY2tib3hfaW1hZ2UgPSAnLi4vaW1hZ2VzL3Nwcml0ZXMvY2hlY2tib3gucG5nJztcbiRzcF9jaGVja2JveF9zcHJpdGVzID0gJGNoZWNrYm94X2NoZWNrZWQgJGNoZWNrYm94X2VtcHR5O1xuJHNwX2NoZWNrYm94ID0gNDhweCAyN3B4ICcuLi9pbWFnZXMvc3ByaXRlcy9jaGVja2JveC5wbmcnICRzcF9jaGVja2JveF9zcHJpdGVzO1xuXHJcbi8vIFRoZXNlIFwicmV0aW5hIGdyb3VwXCIgdmFyaWFibGVzIGFyZSBtYXBwaW5ncyBmb3IgdGhlIG5hbWluZyBhbmQgcGFpcmluZyBvZiBub3JtYWwgYW5kIHJldGluYSBzcHJpdGVzLlxyXG5cclxuLy8gVGhlIGxpc3QgZm9ybWF0dGVkIHZhcmlhYmxlcyBhcmUgaW50ZW5kZWQgZm9yIG1peGlucyBsaWtlIGByZXRpbmFTcHJpdGVgIGFuZCBgcmV0aW5hU3ByaXRlc2AuXHJcblxyXG5cbi8qXG5UaGUgcHJvdmlkZWQgbWl4aW5zIGFyZSBpbnRlbmRlZCB0byBiZSB1c2VkIHdpdGggdGhlIGFycmF5LWxpa2UgdmFyaWFibGVzXG5cbi5pY29uLWhvbWUge1xuICBzcHJpdGVXaWR0aCgkaWNvbl9ob21lKVxufVxuXG4uaWNvbi1lbWFpbCB7XG4gIHNwcml0ZSgkaWNvbl9lbWFpbClcbn1cblxuRXhhbXBsZSB1c2FnZSBpbiBIVE1MOlxuXG5gZGlzcGxheTogYmxvY2tgIHNwcml0ZTpcbjxkaXYgY2xhc3M9XCJpY29uLWhvbWVcIj48L2Rpdj5cblxuVG8gY2hhbmdlIGBkaXNwbGF5YCAoZS5nLiBgZGlzcGxheTogaW5saW5lLWJsb2NrO2ApLCB3ZSBzdWdnZXN0IHVzaW5nIGEgY29tbW9uIENTUyBjbGFzczpcblxuLy8gQ1NTXG4uaWNvbiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLy8gSFRNTFxuPGkgY2xhc3M9XCJpY29uIGljb24taG9tZVwiPjwvaT5cbiovXG5zcHJpdGVXaWR0aCgkc3ByaXRlKSB7XG4gIHdpZHRoOiAkc3ByaXRlWzRdO1xufVxuXG5zcHJpdGVIZWlnaHQoJHNwcml0ZSkge1xuICBoZWlnaHQ6ICRzcHJpdGVbNV07XG59XG5cbnNwcml0ZVBvc2l0aW9uKCRzcHJpdGUpIHtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogJHNwcml0ZVsyXSAkc3ByaXRlWzNdO1xufVxuXG5zcHJpdGVJbWFnZSgkc3ByaXRlKSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgkc3ByaXRlWzhdKTtcbn1cblxuc3ByaXRlKCRzcHJpdGUpIHtcbiAgc3ByaXRlSW1hZ2UoJHNwcml0ZSlcbiAgc3ByaXRlUG9zaXRpb24oJHNwcml0ZSlcbiAgc3ByaXRlV2lkdGgoJHNwcml0ZSlcbiAgc3ByaXRlSGVpZ2h0KCRzcHJpdGUpXG59XG5cclxuXHJcbi8vIFRoZSBgcmV0aW5hU3ByaXRlYCBtaXhpbiBzZXRzIHVwIHJ1bGVzIGFuZCBhIG1lZGlhIHF1ZXJ5IGZvciBhIHNwcml0ZS9yZXRpbmEgc3ByaXRlLlxyXG4vLyBJdCBzaG91bGQgYmUgdXNlZCB3aXRoIGEgXCJyZXRpbmEgZ3JvdXBcIiB2YXJpYWJsZS5cclxuLy9cclxuLy8gVGhlIG1lZGlhIHF1ZXJ5IGlzIGZyb20gQ1NTIFRyaWNrczogaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9zbmlwcGV0cy9jc3MvcmV0aW5hLWRpc3BsYXktbWVkaWEtcXVlcnkvXHJcbi8vXHJcbi8vICRpY29uX2hvbWVfZ3JvdXAgPSAnaWNvbi1ob21lJyAkaWNvbl9ob21lICRpY29uX2hvbWVfMng7XHJcbi8vXHJcbi8vIC5pY29uLWhvbWUge1xyXG4vLyAgICAgcmV0aW5hU3ByaXRlKCRpY29uX2hvbWVfZ3JvdXApXHJcbi8vIH1cclxuXHJcblxyXG5zcHJpdGVCYWNrZ3JvdW5kU2l6ZSgkc3ByaXRlKSB7XHJcblx0YmFja2dyb3VuZC1zaXplICRzcHJpdGVbNl0gJHNwcml0ZVs3XVxyXG59XHJcblxyXG5yZXRpbmFTcHJpdGUoJHJldGluYV9ncm91cCkge1xyXG5cdCRub3JtYWxfc3ByaXRlID0gJHJldGluYV9ncm91cFsxXVxyXG5cdCRyZXRpbmFfc3ByaXRlID0gJHJldGluYV9ncm91cFsyXVxyXG5cdHNwcml0ZSgkbm9ybWFsX3Nwcml0ZSlcclxuXHJcblx0QG1lZGlhICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLFxyXG5cdFx0XHRcdCAobWluLXJlc29sdXRpb246IDE5MmRwaSkge1xyXG5cdFx0c3ByaXRlSW1hZ2UoJHJldGluYV9zcHJpdGUpXHJcblx0XHRzcHJpdGVCYWNrZ3JvdW5kU2l6ZSgkbm9ybWFsX3Nwcml0ZSlcclxuXHR9XHJcbn1cclxuXG4vKlxuVGhlIGBzcHJpdGVzYCBtaXhpbiBnZW5lcmF0ZXMgaWRlbnRpY2FsIG91dHB1dCB0byB0aGUgQ1NTIHRlbXBsYXRlXG4gIGJ1dCBjYW4gYmUgb3ZlcnJpZGRlbiBpbnNpZGUgb2YgU3R5bHVzXG5cblRoaXMgbXVzdCBiZSBydW4gd2hlbiB5b3UgaGF2ZSBhdCBsZWFzdCAyIHNwcml0ZXMuXG4gIElmIHJ1biB3aXRoIGEgc2luZ2xlIHNwcml0ZSwgdGhlbiB0aGVyZSB3aWxsIGJlIHJlZmVyZW5jZSBlcnJvcnMuXG5cbnNwcml0ZXMoJHNwcml0ZXNoZWV0X3Nwcml0ZXMpO1xuKi9cbnNwcml0ZXMoJHNwcml0ZXMpIHtcbiAgZm9yICRzcHJpdGUgaW4gJHNwcml0ZXMge1xuICAgICRzcHJpdGVfbmFtZSA9ICRzcHJpdGVbOV07XG4gICAgLnskc3ByaXRlX25hbWV9IHtcbiAgICAgIHNwcml0ZSgkc3ByaXRlKTtcbiAgICB9XG4gIH1cbn1cblxyXG4vLyBUaGUgYHJldGluYVNwcml0ZXNgIG1peGluIGdlbmVyYXRlcyBhIENTUyBydWxlIGFuZCBtZWRpYSBxdWVyeSBmb3IgcmV0aW5hIGdyb3Vwc1xyXG4vLyBUaGlzIHlpZWxkcyB0aGUgc2FtZSBvdXRwdXQgYXMgQ1NTIHJldGluYSB0ZW1wbGF0ZSBidXQgY2FuIGJlIG92ZXJyaWRkZW4gaW4gU3R5bHVzXHJcbi8vXHJcbi8vIHJldGluYVNwcml0ZXMoJHJldGluYV9ncm91cHMpXHJcblxyXG5yZXRpbmFTcHJpdGVzKCRyZXRpbmFfZ3JvdXBzKSB7XHJcblx0Zm9yICRyZXRpbmFfZ3JvdXAgaW4gJHJldGluYV9ncm91cHMge1xyXG5cdFx0JHNwcml0ZV9uYW1lID0gJHJldGluYV9ncm91cFswXTtcclxuXHRcdC57JHNwcml0ZV9uYW1lfSB7XHJcblx0XHRcdHJldGluYVNwcml0ZSAkcmV0aW5hX2dyb3VwXHJcblx0XHR9XHJcblx0fVxyXG59XHJcbiIsIi8qXG5TdHlsdXMgdmFyaWFibGVzIGFyZSBpbmZvcm1hdGlvbiBhYm91dCBpY29uJ3MgY29tcGlsZWQgc3RhdGUsIHN0b3JlZCB1bmRlciBpdHMgb3JpZ2luYWwgZmlsZSBuYW1lXG5cbi5pY29uLWhvbWUge1xuICB3aWR0aDogJGljb25faG9tZV93aWR0aDtcbn1cblxuVGhlIGxhcmdlIGFycmF5LWxpa2UgdmFyaWFibGVzIGNvbnRhaW4gYWxsIGluZm9ybWF0aW9uIGFib3V0IGEgc2luZ2xlIGljb25cbiRpY29uX2hvbWUgPSB4IHkgb2Zmc2V0X3ggb2Zmc2V0X3kgd2lkdGggaGVpZ2h0IHRvdGFsX3dpZHRoIHRvdGFsX2hlaWdodCBpbWFnZV9wYXRoO1xuXG5BdCB0aGUgYm90dG9tIG9mIHRoaXMgc2VjdGlvbiwgd2UgcHJvdmlkZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgc3ByaXRlc2hlZXQgaXRzZWxmXG4kc3ByaXRlc2hlZXQgPSB3aWR0aCBoZWlnaHQgaW1hZ2UgJHNwcml0ZXNoZWV0X3Nwcml0ZXM7XG4qL1xuJHJhZGlvX2NoZWNrZWRfbmFtZSA9ICdyYWRpb19jaGVja2VkJztcbiRyYWRpb19jaGVja2VkX3ggPSA0OXB4O1xuJHJhZGlvX2NoZWNrZWRfeSA9IDBweDtcbiRyYWRpb19jaGVja2VkX29mZnNldF94ID0gLTQ5cHg7XG4kcmFkaW9fY2hlY2tlZF9vZmZzZXRfeSA9IDBweDtcbiRyYWRpb19jaGVja2VkX3dpZHRoID0gMjNweDtcbiRyYWRpb19jaGVja2VkX2hlaWdodCA9IDI3cHg7XG4kcmFkaW9fY2hlY2tlZF90b3RhbF93aWR0aCA9IDcycHg7XG4kcmFkaW9fY2hlY2tlZF90b3RhbF9oZWlnaHQgPSA0NXB4O1xuJHJhZGlvX2NoZWNrZWRfaW1hZ2UgPSAnLi4vaW1hZ2VzL3Nwcml0ZXMvcmFkaW8ucG5nJztcbiRyYWRpb19jaGVja2VkID0gNDlweCAwcHggLTQ5cHggMHB4IDIzcHggMjdweCA3MnB4IDQ1cHggJy4uL2ltYWdlcy9zcHJpdGVzL3JhZGlvLnBuZycgJ3JhZGlvX2NoZWNrZWQnO1xuJHJhZGlvX2VtcHR5X25hbWUgPSAncmFkaW9fZW1wdHknO1xuJHJhZGlvX2VtcHR5X3ggPSAwcHg7XG4kcmFkaW9fZW1wdHlfeSA9IDBweDtcbiRyYWRpb19lbXB0eV9vZmZzZXRfeCA9IDBweDtcbiRyYWRpb19lbXB0eV9vZmZzZXRfeSA9IDBweDtcbiRyYWRpb19lbXB0eV93aWR0aCA9IDQxcHg7XG4kcmFkaW9fZW1wdHlfaGVpZ2h0ID0gNDVweDtcbiRyYWRpb19lbXB0eV90b3RhbF93aWR0aCA9IDcycHg7XG4kcmFkaW9fZW1wdHlfdG90YWxfaGVpZ2h0ID0gNDVweDtcbiRyYWRpb19lbXB0eV9pbWFnZSA9ICcuLi9pbWFnZXMvc3ByaXRlcy9yYWRpby5wbmcnO1xuJHJhZGlvX2VtcHR5ID0gMHB4IDBweCAwcHggMHB4IDQxcHggNDVweCA3MnB4IDQ1cHggJy4uL2ltYWdlcy9zcHJpdGVzL3JhZGlvLnBuZycgJ3JhZGlvX2VtcHR5JztcbiRzcF9yYWRpb193aWR0aCA9IDcycHg7XG4kc3BfcmFkaW9faGVpZ2h0ID0gNDVweDtcbiRzcF9yYWRpb19pbWFnZSA9ICcuLi9pbWFnZXMvc3ByaXRlcy9yYWRpby5wbmcnO1xuJHNwX3JhZGlvX3Nwcml0ZXMgPSAkcmFkaW9fY2hlY2tlZCAkcmFkaW9fZW1wdHk7XG4kc3BfcmFkaW8gPSA3MnB4IDQ1cHggJy4uL2ltYWdlcy9zcHJpdGVzL3JhZGlvLnBuZycgJHNwX3JhZGlvX3Nwcml0ZXM7XG5cclxuLy8gVGhlc2UgXCJyZXRpbmEgZ3JvdXBcIiB2YXJpYWJsZXMgYXJlIG1hcHBpbmdzIGZvciB0aGUgbmFtaW5nIGFuZCBwYWlyaW5nIG9mIG5vcm1hbCBhbmQgcmV0aW5hIHNwcml0ZXMuXHJcblxyXG4vLyBUaGUgbGlzdCBmb3JtYXR0ZWQgdmFyaWFibGVzIGFyZSBpbnRlbmRlZCBmb3IgbWl4aW5zIGxpa2UgYHJldGluYVNwcml0ZWAgYW5kIGByZXRpbmFTcHJpdGVzYC5cclxuXHJcblxuLypcblRoZSBwcm92aWRlZCBtaXhpbnMgYXJlIGludGVuZGVkIHRvIGJlIHVzZWQgd2l0aCB0aGUgYXJyYXktbGlrZSB2YXJpYWJsZXNcblxuLmljb24taG9tZSB7XG4gIHNwcml0ZVdpZHRoKCRpY29uX2hvbWUpXG59XG5cbi5pY29uLWVtYWlsIHtcbiAgc3ByaXRlKCRpY29uX2VtYWlsKVxufVxuXG5FeGFtcGxlIHVzYWdlIGluIEhUTUw6XG5cbmBkaXNwbGF5OiBibG9ja2Agc3ByaXRlOlxuPGRpdiBjbGFzcz1cImljb24taG9tZVwiPjwvZGl2PlxuXG5UbyBjaGFuZ2UgYGRpc3BsYXlgIChlLmcuIGBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7YCksIHdlIHN1Z2dlc3QgdXNpbmcgYSBjb21tb24gQ1NTIGNsYXNzOlxuXG4vLyBDU1Ncbi5pY29uIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4vLyBIVE1MXG48aSBjbGFzcz1cImljb24gaWNvbi1ob21lXCI+PC9pPlxuKi9cbnNwcml0ZVdpZHRoKCRzcHJpdGUpIHtcbiAgd2lkdGg6ICRzcHJpdGVbNF07XG59XG5cbnNwcml0ZUhlaWdodCgkc3ByaXRlKSB7XG4gIGhlaWdodDogJHNwcml0ZVs1XTtcbn1cblxuc3ByaXRlUG9zaXRpb24oJHNwcml0ZSkge1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAkc3ByaXRlWzJdICRzcHJpdGVbM107XG59XG5cbnNwcml0ZUltYWdlKCRzcHJpdGUpIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCRzcHJpdGVbOF0pO1xufVxuXG5zcHJpdGUoJHNwcml0ZSkge1xuICBzcHJpdGVJbWFnZSgkc3ByaXRlKVxuICBzcHJpdGVQb3NpdGlvbigkc3ByaXRlKVxuICBzcHJpdGVXaWR0aCgkc3ByaXRlKVxuICBzcHJpdGVIZWlnaHQoJHNwcml0ZSlcbn1cblxyXG5cclxuLy8gVGhlIGByZXRpbmFTcHJpdGVgIG1peGluIHNldHMgdXAgcnVsZXMgYW5kIGEgbWVkaWEgcXVlcnkgZm9yIGEgc3ByaXRlL3JldGluYSBzcHJpdGUuXHJcbi8vIEl0IHNob3VsZCBiZSB1c2VkIHdpdGggYSBcInJldGluYSBncm91cFwiIHZhcmlhYmxlLlxyXG4vL1xyXG4vLyBUaGUgbWVkaWEgcXVlcnkgaXMgZnJvbSBDU1MgVHJpY2tzOiBodHRwczovL2Nzcy10cmlja3MuY29tL3NuaXBwZXRzL2Nzcy9yZXRpbmEtZGlzcGxheS1tZWRpYS1xdWVyeS9cclxuLy9cclxuLy8gJGljb25faG9tZV9ncm91cCA9ICdpY29uLWhvbWUnICRpY29uX2hvbWUgJGljb25faG9tZV8yeDtcclxuLy9cclxuLy8gLmljb24taG9tZSB7XHJcbi8vICAgICByZXRpbmFTcHJpdGUoJGljb25faG9tZV9ncm91cClcclxuLy8gfVxyXG5cclxuXHJcbnNwcml0ZUJhY2tncm91bmRTaXplKCRzcHJpdGUpIHtcclxuXHRiYWNrZ3JvdW5kLXNpemUgJHNwcml0ZVs2XSAkc3ByaXRlWzddXHJcbn1cclxuXHJcbnJldGluYVNwcml0ZSgkcmV0aW5hX2dyb3VwKSB7XHJcblx0JG5vcm1hbF9zcHJpdGUgPSAkcmV0aW5hX2dyb3VwWzFdXHJcblx0JHJldGluYV9zcHJpdGUgPSAkcmV0aW5hX2dyb3VwWzJdXHJcblx0c3ByaXRlKCRub3JtYWxfc3ByaXRlKVxyXG5cclxuXHRAbWVkaWEgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksXHJcblx0XHRcdFx0IChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSB7XHJcblx0XHRzcHJpdGVJbWFnZSgkcmV0aW5hX3Nwcml0ZSlcclxuXHRcdHNwcml0ZUJhY2tncm91bmRTaXplKCRub3JtYWxfc3ByaXRlKVxyXG5cdH1cclxufVxyXG5cbi8qXG5UaGUgYHNwcml0ZXNgIG1peGluIGdlbmVyYXRlcyBpZGVudGljYWwgb3V0cHV0IHRvIHRoZSBDU1MgdGVtcGxhdGVcbiAgYnV0IGNhbiBiZSBvdmVycmlkZGVuIGluc2lkZSBvZiBTdHlsdXNcblxuVGhpcyBtdXN0IGJlIHJ1biB3aGVuIHlvdSBoYXZlIGF0IGxlYXN0IDIgc3ByaXRlcy5cbiAgSWYgcnVuIHdpdGggYSBzaW5nbGUgc3ByaXRlLCB0aGVuIHRoZXJlIHdpbGwgYmUgcmVmZXJlbmNlIGVycm9ycy5cblxuc3ByaXRlcygkc3ByaXRlc2hlZXRfc3ByaXRlcyk7XG4qL1xuc3ByaXRlcygkc3ByaXRlcykge1xuICBmb3IgJHNwcml0ZSBpbiAkc3ByaXRlcyB7XG4gICAgJHNwcml0ZV9uYW1lID0gJHNwcml0ZVs5XTtcbiAgICAueyRzcHJpdGVfbmFtZX0ge1xuICAgICAgc3ByaXRlKCRzcHJpdGUpO1xuICAgIH1cbiAgfVxufVxuXHJcbi8vIFRoZSBgcmV0aW5hU3ByaXRlc2AgbWl4aW4gZ2VuZXJhdGVzIGEgQ1NTIHJ1bGUgYW5kIG1lZGlhIHF1ZXJ5IGZvciByZXRpbmEgZ3JvdXBzXHJcbi8vIFRoaXMgeWllbGRzIHRoZSBzYW1lIG91dHB1dCBhcyBDU1MgcmV0aW5hIHRlbXBsYXRlIGJ1dCBjYW4gYmUgb3ZlcnJpZGRlbiBpbiBTdHlsdXNcclxuLy9cclxuLy8gcmV0aW5hU3ByaXRlcygkcmV0aW5hX2dyb3VwcylcclxuXHJcbnJldGluYVNwcml0ZXMoJHJldGluYV9ncm91cHMpIHtcclxuXHRmb3IgJHJldGluYV9ncm91cCBpbiAkcmV0aW5hX2dyb3VwcyB7XHJcblx0XHQkc3ByaXRlX25hbWUgPSAkcmV0aW5hX2dyb3VwWzBdO1xyXG5cdFx0Lnskc3ByaXRlX25hbWV9IHtcclxuXHRcdFx0cmV0aW5hU3ByaXRlICRyZXRpbmFfZ3JvdXBcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuIiwiQGZvbnQtZmFjZSB7XG5cdGZvbnQtZmFtaWx5OiAnUFQgU2Fucyc7XG5cdHNyYzogdXJsKCcuLi9mb250cy9wdC1zYW5zX3JlZ3VsYXIuZW90Jyk7XG5cdHNyYzogbG9jYWwoJ+KYuicpLFxuICAgIHVybCgnLi4vZm9udHMvcHQtc2Fuc19yZWd1bGFyLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcbiAgICB1cmwoJy4uL2ZvbnRzL3B0LXNhbnNfcmVndWxhci5zdmcnKSBmb3JtYXQoJ3N2ZycpO1xuXHRmb250LXdlaWdodDogbm9ybWFsO1xuXHRmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbkBmb250LWZhY2Uge1xuXHRmb250LWZhbWlseTogJ1BUIFNhbnMnO1xuXHRzcmM6IHVybCgnLi4vZm9udHMvcHQtc2Fuc19ib2xkLmVvdCcpO1xuXHRzcmM6IGxvY2FsKCfimLonKSxcbiAgICB1cmwoJy4uL2ZvbnRzL3B0LXNhbnNfYm9sZC53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXG4gICAgdXJsKCcuLi9mb250cy9wdC1zYW5zX2JvbGQuc3ZnJykgZm9ybWF0KCdzdmcnKTtcblx0Zm9udC13ZWlnaHQ6IGJvbGQ7XG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuQGZvbnQtZmFjZSB7XG5cdGZvbnQtZmFtaWx5OiAnQ291cmllciBOZXcnO1xuXHRzcmM6IHVybCgnLi4vZm9udHMvY291cmllci1uZXcuZW90Jyk7XG5cdHNyYzogbG9jYWwoJ+KYuicpLFxuICAgIHVybCgnLi4vZm9udHMvY291cmllci1uZXcud29mZicpIGZvcm1hdCgnd29mZicpLFxuICAgIHVybCgnLi4vZm9udHMvY291cmllci1uZXcuc3ZnJykgZm9ybWF0KCdzdmcnKTtcblx0Zm9udC13ZWlnaHQ6IG5vcm1hbDtcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xufVxuIiwiXG4vLyBSZXNldFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gUmVzZXQgZGVmYXVsdCBzdHlsZXMuXG4qIC8vIEBzdHlsaW50IGlnbm9yZVxuXHRtYXJnaW4gMFxuXHRwYWRkaW5nIDBcblx0Zm9udCBpbmhlcml0XG5cdGJveC1zaXppbmcgYm9yZGVyLWJveFxuXG4vLyBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBpbiBJRSA4LzkuXG5hcnRpY2xlXG5hc2lkZVxuZGV0YWlsc1xuZmlnY2FwdGlvblxuZmlndXJlXG5mb290ZXJcbmhlYWRlclxuaGdyb3VwXG5tYWluXG5uYXZcbnNlY3Rpb25cbnN1bW1hcnlcblx0ZGlzcGxheSBibG9ja1xuXG4vLyAxLiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgOC85LlxuLy8gMi4gTm9ybWFsaXplIHZlcnRpY2FsIGFsaWdubWVudCBvZiBgcHJvZ3Jlc3NgIGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuYXVkaW9cbmNhbnZhc1xucHJvZ3Jlc3NcbnZpZGVvXG5cdGRpc3BsYXkgaW5saW5lLWJsb2NrICAgIC8vIDFcblx0dmVydGljYWwtYWxpZ24gYmFzZWxpbmUgLy8gMlxuXG4vLyBQcmV2ZW50IG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgYGF1ZGlvYCB3aXRob3V0IGNvbnRyb2xzLlxuLy8gUmVtb3ZlIGV4Y2VzcyBoZWlnaHQgaW4gaU9TIDUgZGV2aWNlcy5cbmF1ZGlvOm5vdChbY29udHJvbHNdKVxuXHRkaXNwbGF5IG5vbmVcblx0aGVpZ2h0IDBcblxuLy8gQWRkcmVzcyBgW2hpZGRlbl1gIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LlxuLy8gSGlkZSB0aGUgYHRlbXBsYXRlYCBlbGVtZW50IGluIElFLCBTYWZhcmksIGFuZCBGaXJlZm94IDwgMjIuXG5baGlkZGVuXVxudGVtcGxhdGVcblx0ZGlzcGxheSBub25lXG5cbi8vIEJhc2Vcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIDEuIFNldCBkZWZhdWx0IGZvbnQgZmFtaWx5IHRvIHNhbnMtc2VyaWYuXG4vLyAyLiBQcmV2ZW50IGlPUyB0ZXh0IHNpemUgYWRqdXN0IGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZSwgd2l0aG91dCBkaXNhYmxpbmcgdXNlciB6b29tLlxuLy8gMy4gUmVtb3ZlIGhpZ2hsaXRlIG9uIG1vYmlsZSBkZXZpY2VzLlxuLy8gNC4gU2V0IGRlZmF1bHQgY3Vyc29yLlxuaHRtbFxuXHRmb250LWZhbWlseSBzYW5zLXNlcmlmICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAxXG5cdC1tcy10ZXh0LXNpemUtYWRqdXN0IDEwMCUgICAgICAgICAgICAgICAgICAgICAgIC8vIDJcblx0LXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0IDEwMCUgICAgICAgICAgICAgICAgICAgLy8gMlxuXHQtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3IgcmdiYSgwLCAwLCAwLCAwKSAgICAvLyAzXG5cdC13ZWJraXQtZm9jdXMtcmluZy1jb2xvciByZ2JhKDI1NSwgMjU1LCAyNTUsIDApIC8vIDNcblx0Y3Vyc29yIGRlZmF1bHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gNFxuXG4vLyBTZXQgMTAwJSBsaW5lLWhlaWdodFxuYm9keVxuXHRmb250LXNpemUgMTAwJVxuXHRsaW5lLWhlaWdodCAxXG5cdC1tb3otb3N4LWZvbnQtc21vb3RoaW5nIGdyYXlzY2FsZVxuXHQtd2Via2l0LWZvbnQtc21vb3RoaW5nIGFudGlhbGlhc2VkXG5cbi8vIExpbmtzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBjb2xvciBmcm9tIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbmFcblx0YmFja2dyb3VuZCB0cmFuc3BhcmVudFxuXG4vLyBJbXByb3ZlIHJlYWRhYmlsaXR5IHdoZW4gZm9jdXNlZCBhbmQgYWxzbyBtb3VzZSBob3ZlcmVkIGluIGFsbCBicm93c2Vycy5cbio6Zm9jdXMsICo6YWN0aXZlLCAqOmhvdmVyIC8vIEBzdHlsaW50IGlnbm9yZVxuXHRvdXRsaW5lIG5vbmVcblxuLy8gVHlwb2dyYXBoeVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gQWRkcmVzcyBkaWZmZXJlbmNlcyBiZXR3ZWVuIEZpcmVmb3ggYW5kIG90aGVyIGJyb3dzZXJzLlxuaHJcblx0Ym94LXNpemluZyBjb250ZW50LWJveFxuXHRoZWlnaHQgMFxuXG4vLyBSZW1vdmUgZGVmYXVsdCBzdHlsZVxub2xcbnVsXG5cdGxpc3Qtc3R5bGUgbm9uZVxuXG4vLyBJbXByb3ZlIHJlYWRhYmlsaXR5IG9mIHByZS1mb3JtYXR0ZWQgdGV4dCBpbiBhbGwgYnJvd3NlcnMuXG5wcmVcblx0dGFiLXNpemUgNFxuXHR3aGl0ZS1zcGFjZSBwcmUtd3JhcFxuXG4vLyBTZXQgY29uc2lzdGVudCBxdW90ZSB0eXBlcy5cbnFcblx0cXVvdGVzICdcXDIwMUMnICdcXDIwMUQnICdcXDIwMTgnICdcXDIwMTknXG5cbi8vIEVtYmVkZGVkIGNvbnRlbnRcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIFJlbW92ZSBib3JkZXIgd2hlbiBpbnNpZGUgYGFgIGVsZW1lbnQgaW4gSUUgOC85LzEwLlxuaW1nXG5cdGJvcmRlciBub25lXG5cbi8vIENvcnJlY3Qgb3ZlcmZsb3cgZGlzcGxheWVkIG9kZGx5IGluIElFIDkuXG5zdmc6bm90KDpyb290KVxuXHRvdmVyZmxvdyBoaWRkZW5cblxuLy8gRm9ybXNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIEFkZHJlc3MgRmlyZWZveCA0KyBzZXR0aW5nIGBsaW5lLWhlaWdodGAgb24gYGlucHV0YCB1c2luZyBgIWltcG9ydGFudGAgaW4gdGhlIFVBIHN0eWxlc2hlZXQuXG5idXR0b25cbmlucHV0XG5cdGxpbmUtaGVpZ2h0IG5vcm1hbFxuXG4vLyBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4vLyBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuLy8gQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBDaHJvbWUsIFNhZmFyaSA1KywgYW5kIElFIDgrLlxuLy8gQ29ycmVjdCBgc2VsZWN0YCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94IDQrIGFuZCBPcGVyYS5cbmJ1dHRvblxuc2VsZWN0XG5cdHRleHQtdHJhbnNmb3JtIG5vbmVcblxuLy8gQWRkcmVzcyBgb3ZlcmZsb3dgIHNldCB0byBgaGlkZGVuYCBpbiBJRSA4LzkvMTAuXG5idXR0b25cblx0b3ZlcmZsb3cgdmlzaWJsZVxuXG4vLyAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYCBjb250cm9scy5cbi8vIDIuIENvcnJlY3QgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSBgaW5wdXRgIHR5cGVzIGluIGlPUy5cbi8vIDMuIEltcHJvdmUgdXNhYmlsaXR5IGFuZCBjb25zaXN0ZW5jeSBvZiBjdXJzb3Igc3R5bGUgYmV0d2VlbiBpbWFnZS10eXBlIGBpbnB1dGAgYW5kIG90aGVycy5cbmJ1dHRvblxuaHRtbCBpbnB1dFt0eXBlPSdidXR0b24nXSAgIC8vIDFcbmlucHV0W3R5cGU9J3Jlc2V0J11cbmlucHV0W3R5cGU9J3N1Ym1pdCddXG5cdC13ZWJraXQtYXBwZWFyYW5jZSBidXR0b24gLy8gMlxuXHRjdXJzb3IgcG9pbnRlciAgICAgICAgICAgIC8vIDNcblxuLy8gUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50cy5cbmJ1dHRvbltkaXNhYmxlZF1cbmh0bWwgaW5wdXRbZGlzYWJsZWRdXG5cdGN1cnNvciBkZWZhdWx0XG5cbi8vIEFkZHJlc3MgYm94IHNpemluZyBzZXQgdG8gYGNvbnRlbnQtYm94YCBpbiBJRSA4LzkuXG5pbnB1dFt0eXBlPSdjaGVja2JveCddXG5pbnB1dFt0eXBlPSdyYWRpbyddXG5cdGJveC1zaXppbmcgYm9yZGVyLWJveFxuXG4vLyBGaXggdGhlIGN1cnNvciBzdHlsZSBmb3IgQ2hyb21lJ3MgaW5jcmVtZW50L2RlY3JlbWVudCBidXR0b25zLiBGb3IgY2VydGFpblxuLy8gYGZvbnQtc2l6ZWAgdmFsdWVzIG9mIHRoZSBgaW5wdXRgLCBpdCBjYXVzZXMgdGhlIGN1cnNvciBzdHlsZSBvZiB0aGVcbi8vIGRlY3JlbWVudCBidXR0b24gdG8gY2hhbmdlIGZyb20gYGRlZmF1bHRgIHRvIGB0ZXh0YC5cbmlucHV0W3R5cGU9J251bWJlciddOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uXG5pbnB1dFt0eXBlPSdudW1iZXInXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvblxuXHRoZWlnaHQgYXV0b1xuXG4vLyAxLiBBZGRyZXNzIGBhcHBlYXJhbmNlYCBzZXQgdG8gYHNlYXJjaGZpZWxkYCBpbiBTYWZhcmkgNSBhbmQgQ2hyb21lLlxuLy8gMi4gQWRkcmVzcyBgYm94LXNpemluZ2Agc2V0IHRvIGBib3JkZXItYm94YCBpbiBTYWZhcmkgNSBhbmQgQ2hyb21lIChpbmNsdWRlIGAtbW96YCB0byBmdXR1cmUtcHJvb2YpLlxuaW5wdXRbdHlwZT0nc2VhcmNoJ11cblx0LXdlYmtpdC1hcHBlYXJhbmNlIHRleHRmaWVsZCAvLyAxXG5cdGJveC1zaXppbmcgY29udGVudC1ib3hcblxuLy8gUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIHNlYXJjaCBjYW5jZWwgYnV0dG9uIGluIFNhZmFyaSA1IGFuZCBDaHJvbWUgb24gT1MgWC5cbmlucHV0W3R5cGU9J3NlYXJjaCddOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uXG5pbnB1dFt0eXBlPSdzZWFyY2gnXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvblxuXHQtd2Via2l0LWFwcGVhcmFuY2Ugbm9uZVxuXG4vLyBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCsuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXJcbmlucHV0OjotbW96LWZvY3VzLWlubmVyXG5cdGJvcmRlciBub25lXG5cdHBhZGRpbmcgMFxuXG4vLyAxLiBSZW1vdmUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgOC85LlxuLy8gMi4gSW1wcm92ZSByZWFkYWJpbGl0eSBhbmQgYWxpZ25tZW50IGluIGFsbCBicm93c2Vycy5cbnRleHRhcmVhXG5cdG92ZXJmbG93IGF1dG8gICAgICAvLyAxXG5cdHZlcnRpY2FsLWFsaWduIHRvcCAvLyAyXG5cbi8vIFJlc2V0IHVudXN1YWwgRmlyZWZveC1vbi1BbmRyb2lkIGRlZmF1bHQgc3R5bGUuXG5idXR0b25cbmlucHV0XG5zZWxlY3RbbXVsdGlwbGVdXG50ZXh0YXJlYVxuXHRiYWNrZ3JvdW5kLWltYWdlIG5vbmVcblxuLy8gMS4gUmVtb3ZlIGBib3JkZXItcmFkaXVzYCBpbiBpT1MuXG4vLyAyLiBSZW1vdmUgYGJveC1zaGFkb3dgIGluIGlPUy5cbmlucHV0XG5zZWxlY3RcbnRleHRhcmVhXG5cdGJvcmRlci1yYWRpdXMgMCAvLyAxXG5cdGJveC1zaGFkb3cgbm9uZSAvLyAyXG5cbi8vIDEuIERpc2FibGUgcmVzaXplLlxuLy8gMi4gQWxsb3cgdXNlciBzZWxlY3QuXG5pbnB1dFxudGV4dGFyZWFcblx0cmVzaXplIG5vbmUgICAgICAvLyAxXG5cdHVzZXItc2VsZWN0IHRleHQgLy8gMlxuXG4vLyBIaWRlIHBsYWNlaG9sZGVyIG9uIGZvY3VzLlxuW3BsYWNlaG9sZGVyXTpmb2N1czo6cGxhY2Vob2xkZXJcblx0Y29sb3IgdHJhbnNwYXJlbnRcblxuLy8gVGFibGVzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBSZW1vdmUgbW9zdCBzcGFjaW5nIGJldHdlZW4gdGFibGUgY2VsbHMuXG50YWJsZVxuXHRib3JkZXItY29sbGFwc2UgY29sbGFwc2Vcblx0Ym9yZGVyLXNwYWNpbmcgMFxuIiwiLmJvZHlcblx0ZGlzcGxheSBibG9ja1xuXG5cdCZfZ3JheS1iZ1xuXHRcdGJhY2tncm91bmQtY29sb3IgJGJvZHktYmctY29sb3JcbiIsIi5jaGVja2JveC1ncm91cFxuXHRwb3NpdGlvbiByZWxhdGl2ZVxuXHRkaXNwbGF5IGJsb2NrXG5cdGN1cnNvciBwb2ludGVyXG5cblx0Jl9faW5wdXRcblx0XHRwb3NpdGlvbiBhYnNvbHV0ZVxuXHRcdGxlZnQgLTk5OTk5cHhcblxuXHQmX19sYWJlbFxuXHRcdHBvc2l0aW9uIHJlbGF0aXZlXG5cdFx0cGFkZGluZy1sZWZ0IDMwcHhcblx0XHRkaXNwbGF5IGJsb2NrXG5cdFx0bGluZS1oZWlnaHQgMS4yNVxuXG5cdFx0Zm9udC1mYW1pbHkgJGZvbnQtZmFtaWx5LXByaW1hcnlcblx0XHRmb250LXNpemUgMjFweFxuXHRcdGZvbnQtd2VpZ2h0IDcwMFxuXHRcdGNvbG9yICRmb250LWNvbG9yLXF1YXRlcm5hcnlcblxuXHRcdHVzZXItc2VsZWN0IG5vbmVcblxuXHRcdCY6OmJlZm9yZVxuXHRcdFx0c3ByaXRlICRjaGVja2JveF9lbXB0eVxuXHRcdFx0Y29udGVudCAnJ1xuXG5cdFx0XHRwb3NpdGlvbiBhYnNvbHV0ZVxuXHRcdFx0dG9wIDRweFxuXHRcdFx0bGVmdCA0cHhcblxuXHRcdCY6OmFmdGVyXG5cdFx0XHRzcHJpdGUgJGNoZWNrYm94X2NoZWNrZWRcblx0XHRcdGNvbnRlbnQgJydcblxuXHRcdFx0cG9zaXRpb24gYWJzb2x1dGVcblx0XHRcdHRvcCAtNnB4XG5cdFx0XHRsZWZ0IDdweFxuXG5cdFx0XHRvcGFjaXR5IDBcblx0XHRcdHRyYW5zaXRpb24gYWxsIGVhc2UgLjNzXG5cdFx0XHR0cmFuc2Zvcm0gc2NhbGUoMS41KVxuXG5cdCZfX2lucHV0OmNoZWNrZWQgKyAmX19sYWJlbDo6YWZ0ZXJcblx0XHRvcGFjaXR5IDFcblx0XHR0cmFuc2Zvcm0gc2NhbGUoMSlcbiIsIi5oZWFkZXJcblx0ZGlzcGxheSBibG9ja1xuXG5cdHBvc2l0aW9uIHJlbGF0aXZlXG5cbi50aXRsZVxuXHR0ZXh0LWFsaWduIGNlbnRlclxuXG5cdHBhZGRpbmcteSgyNXB4KVxuXG4uc3RhbXBcblx0cG9zaXRpb24gYWJzb2x1dGVcblx0dG9wIC0xNXB4XG5cdHJpZ2h0IC01NXB4XG5cbkBtZWRpYSAobWF4LWRldmljZS13aWR0aDogNzY4cHgpXG5cdC5sb2dvXG5cdFx0d2lkdGggMTAwcHhcblxuXHRcdCYgaW1nXG5cdFx0XHR3aWR0aCAxMDAlXG5cblx0LnN0YW1wXG5cdFx0dG9wIDBcblx0XHRyaWdodCAwXG5cdFx0d2lkdGggMTAwcHhcblxuXHRcdCYgaW1nXG5cdFx0XHR3aWR0aCAxMDAlXG5cblx0LnRpdGxlXG5cblx0XHQmIGltZ1xuXHRcdFx0d2lkdGggMTAwcHhcbiIsIi8vIENsZWFyIHRoZSBmbG9hdCBvbiBhbnkgZWxlbWVudC5cbmNsZWFyZml4KClcblx0JjphZnRlclxuXHRcdGRpc3BsYXkgdGFibGVcblx0XHRjbGVhciBib3RoXG5cdFx0Y29udGVudCAnJ1xuXG4vLyBGaXggbm8gd29ya2luZyBgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO2AgaW4gQW5kcm9pZC5cbmZpeC10ZXh0LXNpemUtYWRqdXN0KClcblx0YmFja2dyb3VuZC1pbWFnZSBsaW5lYXItZ3JhZGllbnQodHJhbnNwYXJlbnQsIHRyYW5zcGFyZW50KVxuXG4vLyBTZXQgZWxlbWVudCBzaXplXG5zaXplKCR3aWR0aCwgJGhlaWdodCA9ICR3aWR0aClcblx0d2lkdGggJHdpZHRoXG5cdGhlaWdodCAkaGVpZ2h0XG5cbi8vIFNldCBtYXJnaW4gb24gbGVmdCAmIHJpZ2h0XG5tYXJnaW4teCgkbWFyZ2luKVxuXHRtYXJnaW4tbGVmdCAkbWFyZ2luXG5cdG1hcmdpbi1yaWdodCAkbWFyZ2luXG5cbi8vIFNldCBtYXJnaW4gb24gdG9wICYgYm90dG9tXG5tYXJnaW4teSgkbWFyZ2luKVxuXHRtYXJnaW4tdG9wICRtYXJnaW5cblx0bWFyZ2luLWJvdHRvbSAkbWFyZ2luXG5cbi8vIFNldCBwYWRpbmcgb24gbGVmdCAmIHJpZ2h0XG5wYWRkaW5nLXgoJHBhZGRpbmcpXG5cdHBhZGRpbmctbGVmdCAkcGFkZGluZ1xuXHRwYWRkaW5nLXJpZ2h0ICRwYWRkaW5nXG5cbi8vIFNldCBwYWRkaW5nIG9uIHRvcCAmIGJvdHRvbVxucGFkZGluZy15KCRwYWRkaW5nKVxuXHRwYWRkaW5nLXRvcCAkcGFkZGluZ1xuXHRwYWRkaW5nLWJvdHRvbSAkcGFkZGluZ1xuXG4vLyBTZXQgb25lIHN0YXRpYyByZXRpbmEgaW1hZ2VcbnJldGluYUJhY2tncm91bmQoJGltYWdlLCAkZXh0ID0gJ3BuZycpIHtcblx0YmFja2dyb3VuZC1pbWFnZSB1cmwoJy4uL2ltYWdlcy8nICsgJGltYWdlICsgJy4nICsgJGV4dClcblxuXHRAbWVkaWEgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSB7XG5cdFx0YmFja2dyb3VuZC1pbWFnZSB1cmwoJy4uL2ltYWdlcy8nICsgJGltYWdlICsgJ0AyeC4nICsgJGV4dClcblx0fVxufVxuIiwiLmlucHV0LWdyb3VwXG5cdGRpc3BsYXkgZmxleFxuXHRhbGlnbi1pdGVtcyBmbGV4LWVuZFxuXHRtYXJnaW4tYm90dG9tIDVweFxuXG5cdCZfX2xhYmVsXG5cdFx0ZGlzcGxheSBibG9ja1xuXHRcdHRleHQtYWxpZ24gbGVmdFxuXHRcdHdoaXRlLXNwYWNlIG5vd3JhcFxuXG5cdFx0Zm9udC1mYW1pbHkgJGZvbnQtZmFtaWx5LXByaW1hcnlcblx0XHRmb250LXNpemUgMjJweFxuXHRcdGZvbnQtd2VpZ2h0IDcwMFxuXHRcdGNvbG9yICRmb250LWNvbG9yLXByaW1hcnlcblxuXHRcdG1hcmdpbi1yaWdodCAxNXB4XG5cdFx0cGFkZGluZy1ib3R0b20gNHB4XG5cblx0Jl9faW5wdXRcblx0XHRkaXNwbGF5IGlubGluZS1ibG9ja1xuXHRcdHRleHQtYWxpZ24gbGVmdFxuXG5cdFx0YmFja2dyb3VuZC1jb2xvciB0cmFuc3BhcmVudFxuXHRcdGJhY2tncm91bmQtaW1hZ2UgdXJsKCcuLi9pbWFnZXMvbGluZS5wbmcnKVxuXHRcdGJhY2tncm91bmQtcmVwZWF0IG5vLXJlcGVhdFxuXHRcdGJhY2tncm91bmQtcG9zaXRpb24gMCAyNnB4XG5cdFx0YmFja2dyb3VuZC1zaXplIGNvdmVyXG5cdFx0Ym9yZGVyIG5vbmVcblx0XHRvdXRsaW5lIG5vbmVcblxuXHRcdGZvbnQtZmFtaWx5ICRmb250LWZhbWlseS1zZWNvbmRhcnlcblx0XHRmb250LXNpemUgMzBweFxuXHRcdGZvbnQtd2VpZ2h0IDQwMFxuXHRcdGNvbG9yICRmb250LWNvbG9yLXNlY29uZGFyeVxuXG5cdFx0cGFkZGluZyAxNXB4IDE1cHggOHB4XG5cdFx0d2lkdGggMTAwJVxuXHRcdGxpbmUtaGVpZ2h0IDEuMlxuXG5cdCZfc2hvcnQgPiAmX19pbnB1dFxuXHRcdHdpZHRoIDIxMHB4XG5cbkBtZWRpYSAobWF4LWRldmljZS13aWR0aDogNzY4cHgpXG5cdC5pbnB1dC1ncm91cFxuXHRcdGRpc3BsYXkgYmxvY2tcblxuXHRcdCZfX2xhYmVsXG5cdFx0XHRtYXJnaW4tcmlnaHQgMFxuXHRcdFx0cGFkZGluZy1ib3R0b20gMFxuXG5cdFx0Jl9faW5wdXRcblx0XHRcdGRpc3BsYXkgYmxvY2tcblx0XHRcdHdpZHRoIDEwMCVcblxuXHRcdFx0YmFja2dyb3VuZC1wb3NpdGlvbiAwIDE1cHhcblxuXHRcdFx0Zm9udC1zaXplIDE4cHhcblxuXHRcdFx0cGFkZGluZy14KDApXG5cblx0XHQmX3Nob3J0ID4gJl9faW5wdXRcblx0XHRcdHdpZHRoIDEyMHB4XG4iLCIuanMtbGV2ZWxcblx0ZGlzcGxheSBibG9ja1xuXG5cdCZfX2pzLXNsaWRlclxuXHRcdHBvc2l0aW9uIHJlbGF0aXZlXG5cdFx0bWFyZ2luLXRvcCA0MHB4XG5cdFx0cGFkZGluZy1ib3R0b20gMTAwcHhcblx0XHRkaXNwbGF5IGJsb2NrXG5cdFx0aGVpZ2h0IDVweFxuXG5cdFx0YmFja2dyb3VuZC1pbWFnZSB1cmwoJy4uL2ltYWdlcy9saW5lLnBuZycpXG5cdFx0YmFja2dyb3VuZC1yZXBlYXQgbm8tcmVwZWF0XG5cdFx0YmFja2dyb3VuZC1wb3NpdGlvbi15IC0yN3B4XG5cdFx0YmFja2dyb3VuZC1zaXplIDEwMCVcblxuXHRcdCYgLm5vVWktbWFya2VyXG5cdFx0XHRwb3NpdGlvbiBhYnNvbHV0ZVxuXHRcdFx0dG9wIDFweFxuXHRcdFx0d2lkdGggM3B4XG5cdFx0XHRoZWlnaHQgMjZweFxuXG5cdFx0XHRiYWNrZ3JvdW5kLWltYWdlIHVybCgnLi4vaW1hZ2VzL2NvbW1vbi1waXAucG5nJylcblx0XHRcdGJhY2tncm91bmQtcmVwZWF0IG5vLXJlcGVhdFxuXHRcdFx0YmFja2dyb3VuZC1wb3NpdGlvbiAtOHB4IDBcblxuXHRcdFx0Ji5maXJzdFBpcE5vZGVcblx0XHRcdFx0YmFja2dyb3VuZC1pbWFnZSB1cmwoJy4uL2ltYWdlcy9maXJzdC1waXAucG5nJylcblx0XHRcdFx0YmFja2dyb3VuZC1wb3NpdGlvbiAtMXB4IDBcblxuXHRcdFx0Ji5sYXN0UGlwTm9kZVxuXHRcdFx0XHRiYWNrZ3JvdW5kLWltYWdlIHVybCgnLi4vaW1hZ2VzL2xhc3QtcGlwLnBuZycpXG5cdFx0XHRcdGJhY2tncm91bmQtcG9zaXRpb24gLThweCAwXG5cdFx0XHRcdHRyYW5zZm9ybSB0cmFuc2xhdGVYKC0ycHgpXG5cblx0XHQmIC5ub1VpLXZhbHVlXG5cdFx0XHRwb3NpdGlvbiBhYnNvbHV0ZVxuXHRcdFx0bWFyZ2luLXRvcCAzMHB4XG5cdFx0XHRtYXgtd2lkdGggMjAwcHhcblxuXHRcdFx0Zm9udC1mYW1pbHkgJGZvbnQtZmFtaWx5LXByaW1hcnlcblx0XHRcdGZvbnQtc2l6ZSAxM3B4XG5cdFx0XHRmb250LXdlaWdodCA3MDBcblx0XHRcdGxpbmUtaGVpZ2h0IDEuNVxuXHRcdFx0Y29sb3IgJGZvbnQtY29sb3ItcHJpbWFyeVxuXG5cdFx0XHQmOmxhc3QtY2hpbGRcblx0XHRcdFx0dHJhbnNmb3JtIHRyYW5zbGF0ZVgoLTEwMCUpXG5cdFx0XHRcdHdoaXRlLXNwYWNlIG5vd3JhcFxuXG5cdFx0JiAubm9VaS1vcmlnaW5cblx0XHRcdHBvc2l0aW9uIGFic29sdXRlXG5cdFx0XHR0b3AgLTIwcHhcblx0XHRcdHRyYW5zZm9ybSB0cmFuc2xhdGVYKC01MCUpXG5cblx0XHQmIC5ub1VpLWhhbmRsZVxuXHRcdFx0cG9zaXRpb24gcmVsYXRpdmVcblx0XHRcdGJhY2tncm91bmQtaW1hZ2UgdXJsKCcuLi9pbWFnZXMvdHJpYW5nbGUucG5nJylcblx0XHRcdGJhY2tncm91bmQtcmVwZWF0IG5vLXJlcGVhdFxuXHRcdFx0c2l6ZSAxOHB4IDE2cHhcblxuQG1lZGlhIChtYXgtZGV2aWNlLXdpZHRoOiA3NjhweClcblx0LmpzLWxldmVsXG5cdFx0bWFyZ2luLWJvdHRvbSA0MHB4XG5cdFx0cGFkZGluZy1sZWZ0IDE1cHhcblxuXHRcdCZfX2pzLXNsaWRlclxuXHRcdFx0bWFyZ2luLXRvcCAxNXB4XG5cdFx0XHRwYWRkaW5nLWxlZnQgMTVweFxuXHRcdFx0cGFkZGluZy1ib3R0b20gMFxuXHRcdFx0aGVpZ2h0IDIwMHB4XG5cblx0XHRcdGJhY2tncm91bmQtaW1hZ2UgdXJsKCcuLi9pbWFnZXMvbGluZS12ZXJ0aWNhbC5wbmcnKVxuXHRcdFx0YmFja2dyb3VuZC1wb3NpdGlvbi14IC0xMnB4XG5cdFx0XHRiYWNrZ3JvdW5kLXBvc2l0aW9uLXkgMFxuXHRcdFx0YmFja2dyb3VuZC1zaXplIDEwJVxuXG5cdFx0XHQmIC5ub1VpLW1hcmtlclxuXHRcdFx0XHRsZWZ0IDFweFxuXHRcdFx0XHR3aWR0aCAyNnB4XG5cdFx0XHRcdGhlaWdodCAzcHhcblxuXHRcdFx0XHRiYWNrZ3JvdW5kLWltYWdlIHVybCgnLi4vaW1hZ2VzL2NvbW1vbi1waXAtbW9iaWxlLnBuZycpXG5cdFx0XHRcdGJhY2tncm91bmQtcG9zaXRpb24gMCAtOHB4XG5cblx0XHRcdFx0Ji5maXJzdFBpcE5vZGVcblx0XHRcdFx0XHRiYWNrZ3JvdW5kLWltYWdlIHVybCgnLi4vaW1hZ2VzL2ZpcnN0LXBpcC1tb2JpbGUucG5nJylcblxuXHRcdFx0XHQmLmxhc3RQaXBOb2RlXG5cdFx0XHRcdFx0YmFja2dyb3VuZC1pbWFnZSB1cmwoJy4uL2ltYWdlcy9sYXN0LXBpcC1tb2JpbGUucG5nJylcblx0XHRcdFx0XHRiYWNrZ3JvdW5kLXBvc2l0aW9uIDAgLTEycHhcblxuXHRcdFx0JiAubm9VaS12YWx1ZVxuXHRcdFx0XHRsZWZ0IDQwcHhcblx0XHRcdFx0bWFyZ2luLXRvcCAwXG5cdFx0XHRcdG1heC13aWR0aCBhdXRvXG5cdFx0XHRcdHRyYW5zZm9ybSB0cmFuc2xhdGVZKC01MCUpXG5cblx0XHRcdFx0JjpsYXN0LWNoaWxkXG5cdFx0XHRcdFx0dHJhbnNmb3JtIHRyYW5zbGF0ZVkoLTUwJSlcblxuXHRcdFx0JiAubm9VaS1vcmlnaW5cblx0XHRcdFx0cG9zaXRpb24gYWJzb2x1dGVcblx0XHRcdFx0bGVmdCAtMTVweFxuXHRcdFx0XHR0cmFuc2Zvcm0gdHJhbnNsYXRlWSgtNTAlKVxuXG5cdFx0XHQmIC5ub1VpLWhhbmRsZVxuXHRcdFx0XHR0cmFuc2Zvcm0gcm90YXRlKC05MGRlZylcbiIsIi5tYWluXG5cdGRpc3BsYXkgYmxvY2tcblxuXHQmX19zZWN0aW9uXG5cdFx0Jl9wZXJzb25hbC1kYXRhLFxuXHRcdCZfYWJvdXQsXG5cdFx0Jl9wbGFuc1xuXHRcdFx0bWFyZ2luLWJvdHRvbSA2MHB4XG5cblx0XHQmX3NraWxsc1xuXHRcdFx0bWFyZ2luLWJvdHRvbSA2MHB4XG5cdFx0XHRjbGVhcmZpeCgpXG5cblx0Jl9fY29udGVudFxuXHRcdGRpc3BsYXkgYmxvY2tcblxuXHRcdCZfc2tpbGxzXG5cdFx0XHRtYXJnaW4tdG9wIDI1cHhcblxuXHQmX190aXRsZVxuXHRcdG1hcmdpbi1ib3R0b20gMTBweFxuXHRcdGRpc3BsYXkgYmxvY2tcblx0XHRsaW5lLWhlaWdodCAxLjVcblxuXHRcdGZvbnQtZmFtaWx5ICRmb250LWZhbWlseS1wcmltYXJ5XG5cdFx0Zm9udC1zaXplIDI0cHhcblx0XHRmb250LXdlaWdodCA3MDBcblx0XHRjb2xvciAkZm9udC1jb2xvci1wcmltYXJ5XG5cblxuXHQmX19kZXNjcmlwdGlvblxuXHRcdGRpc3BsYXkgYmxvY2tcblx0XHRsaW5lLWhlaWdodCAxLjVcblxuXHRcdGZvbnQtZmFtaWx5ICRmb250LWZhbWlseS1wcmltYXJ5XG5cdFx0Zm9udC1zaXplIDE1cHhcblx0XHRmb250LXdlaWdodCA0MDBcblx0XHRjb2xvciAkZm9udC1jb2xvci10ZXJ0aWFyeVxuXG5AbWVkaWEgKG1heC1kZXZpY2Utd2lkdGg6IDc2OHB4KVxuXHQubWFpblxuXG5cdFx0Jl9fc2VjdGlvblxuXHRcdFx0Jl9wZXJzb25hbC1kYXRhLFxuXHRcdFx0Jl9hYm91dCxcblx0XHRcdCZfc2tpbGxzLFxuXHRcdFx0Jl9wbGFuc1xuXHRcdFx0XHRtYXJnaW4tYm90dG9tIDMwcHhcbiIsIi5wYWdlXG5cdG1hcmdpbiAwIGF1dG9cblx0cGFkZGluZyA1MHB4IDExMHB4XG5cdHdpZHRoIDEwMDBweFxuXHRiYWNrZ3JvdW5kLWltYWdlIHVybCgnLi4vaW1hZ2VzL3BhcGVyLmpwZycpXG5cbkBtZWRpYSAobWF4LWRldmljZS13aWR0aDogNzY4cHgpXG5cdC5wYWdlXG5cdFx0cGFkZGluZyAyMHB4XG5cdFx0d2lkdGggMTAwJVxuIiwiLnBsYW5cblx0bWFyZ2luLXRvcCAyMHB4XG5cdGRpc3BsYXkgYmxvY2tcblxuXHQmX19pdGVtXG5cdFx0bWFyZ2luLXJpZ2h0IDEwcHhcblx0XHRkaXNwbGF5IGlubGluZS1ibG9ja1xuXG5AbWVkaWEgKG1heC1kZXZpY2Utd2lkdGg6IDc2OHB4KVxuXHQucGxhblxuXHRcdG1hcmdpbi10b3AgMTBweFxuXG5cdFx0Jl9faXRlbVxuXHRcdFx0bWFyZ2luLXRvcCAxMHB4XG5cdFx0XHRtYXJnaW4tcmlnaHQgMFxuIiwiLnJhZGlvLWdyb3VwXG5cdHBvc2l0aW9uIHJlbGF0aXZlXG5cdGRpc3BsYXkgYmxvY2tcblx0Y3Vyc29yIHBvaW50ZXJcblxuXHQmX19pbnB1dFxuXHRcdHBvc2l0aW9uIGFic29sdXRlXG5cdFx0bGVmdCAtOTk5OTlweFxuXG5cdCZfX2xhYmVsXG5cdFx0cG9zaXRpb24gcmVsYXRpdmVcblx0XHRwYWRkaW5nLWxlZnQgNDBweFxuXHRcdGRpc3BsYXkgYmxvY2tcblx0XHRsaW5lLWhlaWdodCAxLjI1XG5cblx0XHRmb250LWZhbWlseSAkZm9udC1mYW1pbHktcHJpbWFyeVxuXHRcdGZvbnQtc2l6ZSAyMXB4XG5cdFx0Zm9udC13ZWlnaHQgNzAwXG5cdFx0Y29sb3IgJGZvbnQtY29sb3ItcXVhdGVybmFyeVxuXG5cdFx0dXNlci1zZWxlY3Qgbm9uZVxuXG5cdFx0Jjo6YmVmb3JlXG5cdFx0XHRzcHJpdGUgJHJhZGlvX2VtcHR5XG5cdFx0XHRjb250ZW50ICcnXG5cblx0XHRcdHBvc2l0aW9uIGFic29sdXRlXG5cdFx0XHR0b3AgLThweFxuXHRcdFx0bGVmdCAwXG5cblx0XHQmOjphZnRlclxuXHRcdFx0c3ByaXRlICRyYWRpb19jaGVja2VkXG5cdFx0XHRjb250ZW50ICcnXG5cblx0XHRcdHBvc2l0aW9uIGFic29sdXRlXG5cdFx0XHR0b3AgNXB4XG5cdFx0XHRsZWZ0IDlweFxuXG5cdFx0XHRvcGFjaXR5IDBcblx0XHRcdHRyYW5zaXRpb24gYWxsIGVhc2UgLjNzXG5cdFx0XHR0cmFuc2Zvcm0gc2NhbGUoMS41KVxuXG5cdCZfX2lucHV0OmNoZWNrZWQgKyAmX19sYWJlbDo6YWZ0ZXJcblx0XHRvcGFjaXR5IDFcblx0XHR0cmFuc2Zvcm0gc2NhbGUoMSlcbiIsIi5za2lsbHNcblx0ZGlzcGxheSBibG9ja1xuXHRmbG9hdCBsZWZ0XG5cdHdpZHRoIDMzJVxuXG5cdCZfX3NraWxsXG5cdFx0bWFyZ2luLWJvdHRvbSAxMHB4XG5cdFx0ZGlzcGxheSBibG9ja1xuXG5AbWVkaWEgKG1heC1kZXZpY2Utd2lkdGg6IDc2OHB4KVxuXHQuc2tpbGxzXG5cdFx0ZmxvYXQgbm9uZVxuXHRcdHdpZHRoIDEwMCVcbiIsIi50ZXh0LWFyZWFcblx0ZGlzcGxheSBibG9ja1xuXHR3aWR0aCAxMDAlXG5cdG1pbi1oZWlnaHQgMTgwcHhcblx0Zm9udC1mYW1pbHkgJGZvbnQtZmFtaWx5LXNlY29uZGFyeVxuXHRmb250LXNpemUgMzBweFxuXHRmb250LXdlaWdodCAxMDBcblx0bGluZS1oZWlnaHQgMlxuXHRyZXNpemUgbm9uZVxuXHRiYWNrZ3JvdW5kLWNvbG9yIHRyYW5zcGFyZW50XG5cdGJhY2tncm91bmQtaW1hZ2UgdXJsKCcuLi9pbWFnZXMvbGluZS5wbmcnKVxuXHRiYWNrZ3JvdW5kLXBvc2l0aW9uIDAgMjBweFxuXHRib3JkZXIgbm9uZVxuXG4uanMtdGV4dC1hcmVhXG5cblx0Jl90b3AtMzBcblx0XHRtYXJnaW4tdG9wIDEwcHhcblxuQG1lZGlhIChtYXgtZGV2aWNlLXdpZHRoOiA3NjhweClcblx0LnRleHQtYXJlYVxuXHRcdGZvbnQtc2l6ZSAxOHB4XG5cblx0XHRiYWNrZ3JvdW5kLWltYWdlIHVybCgnLi4vaW1hZ2VzL2xpbmUtbW9iaWxlLnBuZycpXG5cdFx0YmFja2dyb3VuZC1wb3NpdGlvbiAwIDE1cHhcbiJdfQ== */
