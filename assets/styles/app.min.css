/*
Stylus variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon_home_width;
}

The large array-like variables contain all information about a single icon
$icon_home = x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet = width height image $spritesheet_sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  spriteWidth($icon_home)
}

.icon-email {
  sprite($icon_email)
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of Stylus

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

sprites($spritesheet_sprites);
*/
/*
Stylus variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon_home_width;
}

The large array-like variables contain all information about a single icon
$icon_home = x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet = width height image $spritesheet_sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  spriteWidth($icon_home)
}

.icon-email {
  sprite($icon_email)
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of Stylus

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

sprites($spritesheet_sprites);
*/
@font-face {
  font-family: 'PT Sans';
  src: url("../fonts/pt-sans_regular.eot");
  src: local('☺'), url("../fonts/pt-sans_regular.woff") format('woff'), url("../fonts/pt-sans_regular.svg") format('svg');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'PT Sans';
  src: url("../fonts/pt-sans_bold.eot");
  src: local('☺'), url("../fonts/pt-sans_bold.woff") format('woff'), url("../fonts/pt-sans_bold.svg") format('svg');
  font-weight: bold;
  font-style: normal;
}
@font-face {
  font-family: 'Courier New';
  src: url("../fonts/courier-new.eot");
  src: local('☺'), url("../fonts/courier-new.woff") format('woff'), url("../fonts/courier-new.svg") format('svg');
  font-weight: normal;
  font-style: normal;
}
* {
  margin: 0;
  padding: 0;
  font: inherit;
  box-sizing: border-box;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}
audio:not([controls]) {
  display: none;
  height: 0;
}
[hidden],
template {
  display: none;
}
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  -webkit-focus-ring-color: rgba(255,255,255,0);
  cursor: default;
}
body {
  font-size: 100%;
  line-height: 1;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}
a {
  background: transparent;
}
*:focus,
*:active,
*:hover {
  outline: none;
}
hr {
  box-sizing: content-box;
  height: 0;
}
ol,
ul {
  list-style: none;
}
pre {
  -moz-tab-size: 4;
       tab-size: 4;
  white-space: pre-wrap;
}
q {
  quotes: '\201C' '\201D' '\2018' '\2019';
}
img {
  border: none;
}
svg:not(:root) {
  overflow: hidden;
}
button,
input {
  line-height: normal;
}
button,
select {
  text-transform: none;
}
button {
  overflow: visible;
}
button,
html input[type='button'],
input[type='reset'],
input[type='submit'] {
  -webkit-appearance: button;
  cursor: pointer;
}
button[disabled],
html input[disabled] {
  cursor: default;
}
input[type='checkbox'],
input[type='radio'] {
  box-sizing: border-box;
}
input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button {
  height: auto;
}
input[type='search'] {
  -webkit-appearance: textfield;
  box-sizing: content-box;
}
input[type='search']::-webkit-search-cancel-button,
input[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: none;
  padding: 0;
}
textarea {
  overflow: auto;
  vertical-align: top;
}
button,
input,
select[multiple],
textarea {
  background-image: none;
}
input,
select,
textarea {
  border-radius: 0;
  box-shadow: none;
}
input,
textarea {
  resize: none;
  -webkit-user-select: text;
     -moz-user-select: text;
      -ms-user-select: text;
          user-select: text;
}
[placeholder]:focus::-webkit-input-placeholder {
  color: transparent;
}
[placeholder]:focus:-ms-input-placeholder {
  color: transparent;
}
[placeholder]:focus::placeholder {
  color: transparent;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
.body {
  display: block;
}
.body_gray-bg {
  background-color: #797979;
}
.checkbox-group {
  position: relative;
  display: block;
  cursor: pointer;
}
.checkbox-group__input {
  position: absolute;
  left: -99999px;
}
.checkbox-group__label {
  position: relative;
  padding-left: 30px;
  display: block;
  line-height: 1.25;
  font-family: 'PT Sans', sans-serif;
  font-size: 21px;
  font-weight: 700;
  color: #000;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}
.checkbox-group__label::before {
  background-image: url("../images/sprites/checkbox.png");
  background-position: -29px 0px;
  width: 19px;
  height: 18px;
  content: '';
  position: absolute;
  top: 4px;
  left: 4px;
}
.checkbox-group__label::after {
  background-image: url("../images/sprites/checkbox.png");
  background-position: 0px 0px;
  width: 21px;
  height: 27px;
  content: '';
  position: absolute;
  top: -6px;
  left: 7px;
  opacity: 0;
  transition: all ease 0.3s;
  transform: scale(1.5);
}
.checkbox-group__input:checked + .checkbox-group__label::after {
  opacity: 1;
  transform: scale(1);
}
.header {
  display: block;
  position: relative;
}
.title {
  text-align: center;
  padding-top: 25px;
  padding-bottom: 25px;
}
.stamp {
  position: absolute;
  top: -15px;
  right: -55px;
}
@media (max-device-width: 768px) {
  .logo {
    width: 100px;
  }
  .logo img {
    width: 100%;
  }
  .stamp {
    top: 0;
    right: 0;
    width: 100px;
  }
  .stamp img {
    width: 100%;
  }
  .title img {
    width: 100px;
  }
}
.input-group {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: end;
      align-items: flex-end;
  margin-bottom: 5px;
}
.input-group__label {
  display: block;
  text-align: left;
  white-space: nowrap;
  font-family: 'PT Sans', sans-serif;
  font-size: 22px;
  font-weight: 700;
  color: #2e1a15;
  margin-right: 15px;
  padding-bottom: 4px;
}
.input-group__input {
  display: inline-block;
  text-align: left;
  background-color: transparent;
  background-image: url("../images/line.png");
  background-repeat: no-repeat;
  background-position: 0 26px;
  background-size: cover;
  border: none;
  outline: none;
  font-family: 'Courier New', serif;
  font-size: 30px;
  font-weight: 400;
  color: #231f20;
  padding: 15px 15px 8px;
  width: 100%;
  line-height: 1.2;
}
.input-group_short > .input-group__input {
  width: 210px;
}
@media (max-device-width: 768px) {
  .input-group {
    display: block;
  }
  .input-group__label {
    margin-right: 0;
    padding-bottom: 0;
  }
  .input-group__input {
    display: block;
    width: 100%;
    background-position: 0 15px;
    font-size: 18px;
    padding-left: 0;
    padding-right: 0;
  }
  .input-group_short > .input-group__input {
    width: 120px;
  }
}
.js-level {
  display: block;
}
.js-level__js-slider {
  position: relative;
  margin-top: 40px;
  padding-bottom: 100px;
  display: block;
  height: 5px;
  background-image: url("../images/line.png");
  background-repeat: no-repeat;
  background-position-y: -27px;
  background-size: 100%;
}
.js-level__js-slider .noUi-marker {
  position: absolute;
  top: 1px;
  width: 3px;
  height: 26px;
  background-image: url("../images/common-pip.png");
  background-repeat: no-repeat;
  background-position: -8px 0;
}
.js-level__js-slider .noUi-marker.firstPipNode {
  background-image: url("../images/first-pip.png");
  background-position: -1px 0;
}
.js-level__js-slider .noUi-marker.lastPipNode {
  background-image: url("../images/last-pip.png");
  background-position: -8px 0;
  transform: translateX(-2px);
}
.js-level__js-slider .noUi-value {
  position: absolute;
  margin-top: 30px;
  max-width: 200px;
  font-family: 'PT Sans', sans-serif;
  font-size: 13px;
  font-weight: 700;
  line-height: 1.5;
  color: #2e1a15;
}
.js-level__js-slider .noUi-value:last-child {
  transform: translateX(-100%);
  white-space: nowrap;
}
.js-level__js-slider .noUi-origin {
  position: absolute;
  top: -20px;
  transform: translateX(-50%);
}
.js-level__js-slider .noUi-handle {
  position: relative;
  background-image: url("../images/triangle.png");
  background-repeat: no-repeat;
  width: 18px;
  height: 16px;
}
@media (max-device-width: 768px) {
  .js-level {
    margin-bottom: 40px;
    padding-left: 15px;
  }
  .js-level__js-slider {
    margin-top: 15px;
    padding-left: 15px;
    padding-bottom: 0;
    height: 200px;
    background-image: url("../images/line-vertical.png");
    background-position-x: -12px;
    background-position-y: 0;
    background-size: 10%;
  }
  .js-level__js-slider .noUi-marker {
    left: 1px;
    width: 26px;
    height: 3px;
    background-image: url("../images/common-pip-mobile.png");
    background-position: 0 -8px;
  }
  .js-level__js-slider .noUi-marker.firstPipNode {
    background-image: url("../images/first-pip-mobile.png");
  }
  .js-level__js-slider .noUi-marker.lastPipNode {
    background-image: url("../images/last-pip-mobile.png");
    background-position: 0 -12px;
  }
  .js-level__js-slider .noUi-value {
    left: 40px;
    margin-top: 0;
    max-width: auto;
    transform: translateY(-50%);
  }
  .js-level__js-slider .noUi-value:last-child {
    transform: translateY(-50%);
  }
  .js-level__js-slider .noUi-origin {
    position: absolute;
    left: -15px;
    transform: translateY(-50%);
  }
  .js-level__js-slider .noUi-handle {
    transform: rotate(-90deg);
  }
}
.main {
  display: block;
}
.main__section_personal-data {
  margin-bottom: 60px;
}
.main__section_plans {
  margin-bottom: 60px;
}
.main__section_about {
  margin-bottom: 60px;
}
.main__section_skills {
  margin-bottom: 60px;
}
.main__section_skills:after {
  display: table;
  clear: both;
  content: '';
}
.main__content {
  display: block;
}
.main__content_skills {
  margin-top: 25px;
}
.main__title {
  margin-bottom: 10px;
  display: block;
  line-height: 1.5;
  font-family: 'PT Sans', sans-serif;
  font-size: 24px;
  font-weight: 700;
  color: #2e1a15;
}
.main__description {
  display: block;
  line-height: 1.5;
  font-family: 'PT Sans', sans-serif;
  font-size: 15px;
  font-weight: 400;
  color: #3d3d3d;
}
.page {
  margin: 0 auto;
  padding: 50px 110px;
  width: 1000px;
  background-image: url("../images/paper.jpg");
}
@media (max-device-width: 768px) {
  .page {
    padding: 20px;
    width: 100%;
  }
}
.plan {
  margin-top: 20px;
  display: block;
}
.plan__item {
  margin-right: 10px;
  display: inline-block;
}
@media (max-device-width: 768px) {
  .plan {
    margin-top: 10px;
  }
  .plan__item {
    margin-top: 10px;
    margin-right: 0;
  }
}
.radio-group {
  position: relative;
  display: block;
  cursor: pointer;
}
.radio-group__input {
  position: absolute;
  left: -99999px;
}
.radio-group__label {
  position: relative;
  padding-left: 40px;
  display: block;
  line-height: 1.25;
  font-family: 'PT Sans', sans-serif;
  font-size: 21px;
  font-weight: 700;
  color: #000;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}
.radio-group__label::before {
  background-image: url("../images/sprites/radio.png");
  background-position: 0px 0px;
  width: 41px;
  height: 45px;
  content: '';
  position: absolute;
  top: -8px;
  left: 0;
}
.radio-group__label::after {
  background-image: url("../images/sprites/radio.png");
  background-position: -49px 0px;
  width: 23px;
  height: 27px;
  content: '';
  position: absolute;
  top: 5px;
  left: 9px;
  opacity: 0;
  transition: all ease 0.3s;
  transform: scale(1.5);
}
.radio-group__input:checked + .radio-group__label::after {
  opacity: 1;
  transform: scale(1);
}
.skills {
  display: block;
  float: left;
  width: 33%;
}
.skills__skill {
  margin-bottom: 10px;
  display: block;
}
@media (max-device-width: 768px) {
  .skills {
    float: none;
    width: 100%;
  }
}
.text-area {
  display: block;
  width: 100%;
  min-height: 180px;
  font-family: 'Courier New', serif;
  font-size: 30px;
  font-weight: 100;
  line-height: 2;
  resize: none;
  background-color: transparent;
  background-image: url("../images/line.png");
  background-position: 0 20px;
  border: none;
}
.js-text-area_top-30 {
  margin-top: 10px;
}
@media (max-device-width: 768px) {
  .text-area {
    font-size: 18px;
    background-image: url("../images/line-mobile.png");
    background-position: 0 15px;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
